[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "youjin-blog",
    "section": "",
    "text": "My First Qmd blog post\n\n\n\n\n\n\npython\n\n\npandas\n\n\nnumpy\n\n\n\n\n\n\n\n\n\nMar 7, 2025\n\n\nYoujin. L\n\n\n\n\n\n\n\n\n\n\n\n\nPalmerpenguins Data Analysis\n\n\n\n\n\n\npython\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMar 7, 2025\n\n\n조익현, 정의주, 윤현재, 이유진\n\n\n\n\n\n\n\n\n\n\n\n\nPost whih Code\n\n\n\n\n\n\nanalysis\n\n\ncode\n\n\n\n\n\n\n\n\n\nMar 7, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 3, 2025\n\n\nTristan O’Malley\n\n\n\n\n:::\n\nNo matching items\n\n:::\n:::"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "비전공자의 데이터 분석기"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post whih Code",
    "section": "",
    "text": "This is a post with executable code.\n\nimport numpy as np\n\na = np.array(10)\na\n\narray(10)"
  },
  {
    "objectID": "posts/palmerpenguins/index.html",
    "href": "posts/palmerpenguins/index.html",
    "title": "Palmerpenguins Data Analysis",
    "section": "",
    "text": "Intro\nGithub에서 제공하는 Palmerpenguis 데이터를 활용하여 펭귄별 특징을 알아보았습니다.\n\n\n결과 요약\n\nAdelie: 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움\nChinstrap: 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간\nGentoo: 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움\n\n\n\n분석 데이터\n\n데이터 로드\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n1. NaN 값 확인 및 제거\n\npenguins.isna().sum() # NaN 값이 어디에 있는지 확인\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\n\npenguins.isna().sum() # NaN 값 수정 확인\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\n\n1. 각 종별 펭귄수 구하기\n\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n\n\n결과 값\n\n\n\nSpecies\nCount\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\n\n\n해당 결과를 통해 Adelie(152), Gentoo(124), Chinstrap(68) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-1. 각 섬별 펭귄수 구하기\n\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n\n\n결과 값\n\n\n\nIsland\ncount\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\n\n\n해당 결과를 통해 Biscoe(168), Dream(124), Torgersen(52) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-2. 각 섬별 펭귄 종류 구하기\n\nisland_species_counts = {}\n\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n    \n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n\n\n\n\nIsland\nAdelie\nChinstrap\nGentoo\n\n\n\n\nBiscoe\n40\n0\n20\n\n\nDream\n30\n10\n15\n\n\nTorgersen\n25\n5\n0\n\n\n\n\nAdelie는 모든 지역(Torgersen(52), Biscoe(44), Dream(52))에 서식하고 있어 서식지가 분포되어 있는 것을 알 수 있습니다.\n\n\nGentoo와 Chinstrap은 각 Biscoe와 Dream에만 서식하는 것을 알 수 있습니다.\n\n\n\n3-1. 부리 길이 구하기\n\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] &gt; 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n\n\n결과 값\n\n\n\nMetric\nValue(mm)\n\n\n\n\nMax Bill Length\n59.6\n\n\nMin Bill Length\n32.1\n\n\nMean Bill Length\n43.6\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 부리의 최대값(59.6), 최소값(32.1), 평균값(43.6)을 알 수 있습니다.\n\n\n\n3-2. 펭귄별 부리 길이 구하기\n\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] &gt; 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Bill Length\nMin Bill Length\nMean Bill Length\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\n\n\n각 종의 부리 길이 평균값을 기준으로 부리가 가장 긴 종을 다음과 같이 구했습니다.\n\n\nChinstrap(48.8) &gt; Gentoo(47.1) &gt; Adelie(38.5)\n\n\n\n4-1. 몸무게 구하기\n\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] &gt; 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n\n\n결과 값\n\n\n\nMetric\nValue(g)\n\n\n\n\nMax Body Mass\n6300.0\n\n\nMin Body Mass\n2700.0\n\n\nMean Body Mass\n4177.33\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 몸무게게 최대값(6300), 최소값(2700), 평균값(4177)을 알 수 있습니다.\n\n\n\n4-2. 펭귄별 몸무게 구하기\n\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] &gt; 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Body Mass(g)\nMin Body Mass(g)\nMean Body Mass(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\n\n\n각 종의 몸무게 평균값을 기준으로 무게가 가장 무거운 종을 다음과 같이 구했습니다.\n\n\nGentoo(5035) &gt; Chinstrap(3733.09) &gt; Adelie(3676.32)\n\n이번 분석은 가중치 없이 단순히 각 항목의 평균값을 비교하여 판단했습니다.\n\n\n추후 전체 값과 종별 특성을 비교하는 값을 작성할 예정입니다."
  },
  {
    "objectID": "palmerpenguins/index.html",
    "href": "palmerpenguins/index.html",
    "title": "Palmerpenguins Data Analysis",
    "section": "",
    "text": "총정리\n\nAdelie: 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움\nChinstrap: 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간\nGentoo: 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움\n\n\n\n분석 데이터\n\n데이터 로드\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n1. NaN 값 확인 및 제거\n\npenguins.isna().sum() # NaN 값이 어디에 있는지 확인\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\n\npenguins.isna().sum() # NaN 값 수정 확인\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\n\n1. 각 종별 펭귄수 구하기\n\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n\n\n결과 값\n\n\n\nSpecies\nCount\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\n\n\n해당 결과를 통해 Adelie(152), Gentoo(124), Chinstrap(68) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-1. 각 섬별 펭귄수 구하기\n\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n\n\n결과 값\n\n\n\nIsland\ncount\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\n\n\n해당 결과를 통해 Biscoe(168), Dream(124), Torgersen(52) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-2. 각 섬별 펭귄 종류 구하기\n\nisland_species_counts = {}\n\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n    \n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n\n\n\n\nIsland\nAdelie\nChinstrap\nGentoo\n\n\n\n\nBiscoe\n40\n0\n20\n\n\nDream\n30\n10\n15\n\n\nTorgersen\n25\n5\n0\n\n\n\n\nAdelie는 모든 지역(Torgersen(52), Biscoe(44), Dream(52))에 서식하고 있어 서식지가 분포되어 있는 것을 알 수 있습니다.\n\n\nGentoo와 Chinstrap은 각 Biscoe와 Dream에만 서식하는 것을 알 수 있습니다.\n\n\n\n3-1. 부리 길이 구하기\n\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] &gt; 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n\n\n결과 값\n\n\n\nMetric\nValue(mm)\n\n\n\n\nMax Bill Length\n59.6\n\n\nMin Bill Length\n32.1\n\n\nMean Bill Length\n43.6\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 부리의 최대값(59.6), 최소값(32.1), 평균값(43.6)을 알 수 있습니다.\n\n\n\n3-2. 펭귄별 부리 길이 구하기\n\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] &gt; 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Bill Length\nMin Bill Length\nMean Bill Length\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\n\n\n각 종의 부리 길이 평균값을 기준으로 부리가 가장 긴 종을 다음과 같이 구했습니다.\n\n\nChinstrap(48.8) &gt; Gentoo(47.1) &gt; Adelie(38.5)\n\n\n\n4-1. 몸무게 구하기\n\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] &gt; 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n\n\n결과 값\n\n\n\nMetric\nValue(g)\n\n\n\n\nMax Body Mass\n6300.0\n\n\nMin Body Mass\n2700.0\n\n\nMean Body Mass\n4177.33\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 몸무게게 최대값(6300), 최소값(2700), 평균값(4177)을 알 수 있습니다.\n\n\n\n4-2. 펭귄별 몸무게 구하기\n\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] &gt; 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Body Mass(g)\nMin Body Mass(g)\nMean Body Mass(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\n\n\n각 종의 몸무게 평균값을 기준으로 무게가 가장 무거운 종을 다음과 같이 구했습니다.\n\n\nGentoo(5035) &gt; Chinstrap(3733.09) &gt; Adelie(3676.32)\n\n이번 분석은 가중치 없이 단순히 각 항목의 평균값을 비교하여 판단했습니다.\n\n\n추후 전체 값과 종별 특성을 비교하는 값을 작성할 예정입니다."
  },
  {
    "objectID": "posts/palmerpenguins/palmerpenguins.html",
    "href": "posts/palmerpenguins/palmerpenguins.html",
    "title": "Palmerpenguins Data Analysis",
    "section": "",
    "text": "{: width = 10% height=10%}\n\nIntro\nGithub에서 제공하는 Palmerpenguis 데이터를 활용하여 펭귄별 특징을 알아보았습니다.\n\n\n결과 요약\n\nAdelie: 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움\nChinstrap: 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간\nGentoo: 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움\n\n\n\n분석 데이터\n\n데이터 로드\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n1. NaN 값 확인 및 제거\n\npenguins.isna().sum() # NaN 값이 어디에 있는지 확인\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\n\npenguins.isna().sum() # NaN 값 수정 확인\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\n\n1. 각 종별 펭귄수 구하기\n\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n\n\n결과 값\n\n\n\nSpecies\nCount\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\n\n\n해당 결과를 통해 Adelie(152), Gentoo(124), Chinstrap(68) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-1. 각 섬별 펭귄수 구하기\n\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n\n\n결과 값\n\n\n\nIsland\ncount\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\n\n\n해당 결과를 통해 Biscoe(168), Dream(124), Torgersen(52) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-2. 각 섬별 펭귄 종류 구하기\n\nisland_species_counts = {}\n\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n    \n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n\n\n\n\nIsland\nAdelie\nChinstrap\nGentoo\n\n\n\n\nBiscoe\n40\n0\n20\n\n\nDream\n30\n10\n15\n\n\nTorgersen\n25\n5\n0\n\n\n\n\nAdelie는 모든 지역(Torgersen(52), Biscoe(44), Dream(52))에 서식하고 있어 서식지가 분포되어 있는 것을 알 수 있습니다.\n\n\nGentoo와 Chinstrap은 각 Biscoe와 Dream에만 서식하는 것을 알 수 있습니다.\n\n\n\n3-1. 부리 길이 구하기\n\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] &gt; 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n\n\n결과 값\n\n\n\nMetric\nValue(mm)\n\n\n\n\nMax Bill Length\n59.6\n\n\nMin Bill Length\n32.1\n\n\nMean Bill Length\n43.6\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 부리의 최대값(59.6), 최소값(32.1), 평균값(43.6)을 알 수 있습니다.\n\n\n\n3-2. 펭귄별 부리 길이 구하기\n\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] &gt; 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Bill Length\nMin Bill Length\nMean Bill Length\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\n\n\n각 종의 부리 길이 평균값을 기준으로 부리가 가장 긴 종을 다음과 같이 구했습니다.\n\n\nChinstrap(48.8) &gt; Gentoo(47.1) &gt; Adelie(38.5)\n\n\n\n4-1. 몸무게 구하기\n\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] &gt; 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n\n\n결과 값\n\n\n\nMetric\nValue(g)\n\n\n\n\nMax Body Mass\n6300.0\n\n\nMin Body Mass\n2700.0\n\n\nMean Body Mass\n4177.33\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 몸무게게 최대값(6300), 최소값(2700), 평균값(4177)을 알 수 있습니다.\n\n\n\n4-2. 펭귄별 몸무게 구하기\n\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] &gt; 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Body Mass(g)\nMin Body Mass(g)\nMean Body Mass(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\n\n\n각 종의 몸무게 평균값을 기준으로 무게가 가장 무거운 종을 다음과 같이 구했습니다.\n\n\nGentoo(5035) &gt; Chinstrap(3733.09) &gt; Adelie(3676.32)\n\n이번 분석은 가중치 없이 단순히 각 항목의 평균값을 비교하여 판단했습니다.\n\n\n추후 전체 값과 종별 특성을 비교하는 값을 작성할 예정입니다."
  },
  {
    "objectID": "palmerpenguins/palmerpenguins.html",
    "href": "palmerpenguins/palmerpenguins.html",
    "title": "Palmerpenguins Data Analysis",
    "section": "",
    "text": "{: width = 10% height=10%}\n\nIntro\nGithub에서 제공하는 Palmerpenguis 데이터를 활용하여 펭귄별 특징을 알아보았습니다.\n\n\n결과 요약\n\nAdelie: 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움\nChinstrap: 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간\nGentoo: 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움\n\n\n\n분석 데이터\n\n데이터 로드\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n1. NaN 값 확인 및 제거\n\npenguins.isna().sum() # NaN 값이 어디에 있는지 확인\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\n\npenguins.isna().sum() # NaN 값 수정 확인\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\n\n1. 각 종별 펭귄수 구하기\n\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n\n\n결과 값\n\n\n\nSpecies\nCount\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\n\n\n해당 결과를 통해 Adelie(152), Gentoo(124), Chinstrap(68) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-1. 각 섬별 펭귄수 구하기\n\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n\n\n결과 값\n\n\n\nIsland\ncount\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\n\n\n해당 결과를 통해 Biscoe(168), Dream(124), Torgersen(52) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-2. 각 섬별 펭귄 종류 구하기\n\nisland_species_counts = {}\n\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n    \n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n\n\n\n\nIsland\nAdelie\nChinstrap\nGentoo\n\n\n\n\nBiscoe\n40\n0\n20\n\n\nDream\n30\n10\n15\n\n\nTorgersen\n25\n5\n0\n\n\n\n\nAdelie는 모든 지역(Torgersen(52), Biscoe(44), Dream(52))에 서식하고 있어 서식지가 분포되어 있는 것을 알 수 있습니다.\n\n\nGentoo와 Chinstrap은 각 Biscoe와 Dream에만 서식하는 것을 알 수 있습니다.\n\n\n\n3-1. 부리 길이 구하기\n\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] &gt; 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n\n\n결과 값\n\n\n\nMetric\nValue(mm)\n\n\n\n\nMax Bill Length\n59.6\n\n\nMin Bill Length\n32.1\n\n\nMean Bill Length\n43.6\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 부리의 최대값(59.6), 최소값(32.1), 평균값(43.6)을 알 수 있습니다.\n\n\n\n3-2. 펭귄별 부리 길이 구하기\n\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] &gt; 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Bill Length\nMin Bill Length\nMean Bill Length\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\n\n\n각 종의 부리 길이 평균값을 기준으로 부리가 가장 긴 종을 다음과 같이 구했습니다.\n\n\nChinstrap(48.8) &gt; Gentoo(47.1) &gt; Adelie(38.5)\n\n\n\n4-1. 몸무게 구하기\n\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] &gt; 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n\n\n결과 값\n\n\n\nMetric\nValue(g)\n\n\n\n\nMax Body Mass\n6300.0\n\n\nMin Body Mass\n2700.0\n\n\nMean Body Mass\n4177.33\n\n\n\n\n\n해당 결과를 통해 전체 펭귄 몸무게게 최대값(6300), 최소값(2700), 평균값(4177)을 알 수 있습니다.\n\n\n\n4-2. 펭귄별 몸무게 구하기\n\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] &gt; 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Body Mass(g)\nMin Body Mass(g)\nMean Body Mass(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\n\n\n각 종의 몸무게 평균값을 기준으로 무게가 가장 무거운 종을 다음과 같이 구했습니다.\n\n\nGentoo(5035) &gt; Chinstrap(3733.09) &gt; Adelie(3676.32)\n\n이번 분석은 가중치 없이 단순히 각 항목의 평균값을 비교하여 판단했습니다.\n\n\n추후 전체 값과 종별 특성을 비교하는 값을 작성할 예정입니다."
  },
  {
    "objectID": "posts/my-first-post/indx.html",
    "href": "posts/my-first-post/indx.html",
    "title": "My First Qmd blog post",
    "section": "",
    "text": "넘파이 패키지 불러오기\n\nimport numpy as np\n\na=np.array([3, 4, 5])\n\n\n\n\n판다스 패키지 불러오기기\n\nimport pandas as pd"
  },
  {
    "objectID": "posts/my-first-post/indx.html#파이선-데이터-분석",
    "href": "posts/my-first-post/indx.html#파이선-데이터-분석",
    "title": "My First Qmd blog post",
    "section": "",
    "text": "넘파이 패키지 불러오기\n\nimport numpy as np\n\na=np.array([3, 4, 5])\n\n\n\n\n판다스 패키지 불러오기기\n\nimport pandas as pd"
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html",
    "href": "posts/palmerpenguins/index copy.html",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 이번 분석석에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다.\n\n\n\n\n\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\nprint(missing_values)\n\n# 결측값 대체\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n\n\n\n\n\nspecies_counts = penguins[\"species\"].value_counts()\nplt.figure(figsize=(8,5))\nsns.barplot(x=species_counts.index, y=species_counts.values, palette=\"pastel\")\nplt.title(\"종별 펭귄 개체수 분포\")\nplt.xlabel(\"펭귄 종\")\nplt.ylabel(\"개체수\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\1627610802.py:3: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=species_counts.index, y=species_counts.values, palette=\"pastel\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44060 (\\N{HANGUL SYLLABLE GAE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 52404 (\\N{HANGUL SYLLABLE CE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 비율을 차지하며, Chinstrap 종이 가장 적다.\n\n\n\n\n\nisland_counts = penguins[\"island\"].value_counts()\nsns.barplot(x=island_counts.index, y=island_counts.values, palette=\"coolwarm\")\nplt.title(\"섬별 펭귄 개체수 분포\")\nplt.xlabel(\"섬\")\nplt.ylabel(\"개체수\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\2278252319.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=island_counts.index, y=island_counts.values, palette=\"coolwarm\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44060 (\\N{HANGUL SYLLABLE GAE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 52404 (\\N{HANGUL SYLLABLE CE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49452 (\\N{HANGUL SYLLABLE SEOM}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 발견되었으며, Torgersen 섬에서는 가장 적었다.\n\n\n\n\n\nsns.boxplot(x=\"species\", y=\"bill_length_mm\", data=penguins, palette=\"Set2\")\nplt.title(\"종별 부리 길이 분포\")\nplt.xlabel(\"펭귄 종\")\nplt.ylabel(\"부리 길이(mm)\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\1038684966.py:1: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.boxplot(x=\"species\", y=\"bill_length_mm\", data=penguins, palette=\"Set2\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 47532 (\\N{HANGUL SYLLABLE RI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44600 (\\N{HANGUL SYLLABLE GIL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51060 (\\N{HANGUL SYLLABLE I}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 가장 긴 부리를 가지고 있으며, Adelie 종이 가장 짧은 부리를 가지고 있다.\n\n\n\n\n\nsns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins, palette=\"muted\")\nplt.title(\"종별 몸무게 분포\")\nplt.xlabel(\"펭귄 종\")\nplt.ylabel(\"몸무게(g)\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\4144331427.py:1: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins, palette=\"muted\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 47800 (\\N{HANGUL SYLLABLE MOM}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 47924 (\\N{HANGUL SYLLABLE MU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44172 (\\N{HANGUL SYLLABLE GE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 가장 무거우며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다.\n\n\n\n\n\ncorr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\nplt.figure(figsize=(8,6))\nsns.heatmap(corr_matrix, annot=True, cmap=\"coolwarm\", linewidths=0.5)\nplt.title(\"변수 간 상관 관계\")\nplt.show()\n\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48320 (\\N{HANGUL SYLLABLE BYEON}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44036 (\\N{HANGUL SYLLABLE GAN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44288 (\\N{HANGUL SYLLABLE GWAN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44228 (\\N{HANGUL SYLLABLE GYE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와도 강한 양의 상관관계를 보인다.\n\n\n\n\n\n본 분석을 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 특히: - Adelie 종이 가장 많고 Chinstrap 종이 가장 적음. - Gentoo 종이 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 존재하며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 사이의 강한 상관관계를 확인.\n추후 연구에서는 환경 요인과의 관계, 군집 분석 등을 추가적으로 고려할 필요가 있다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#서론",
    "href": "posts/palmerpenguins/index copy.html#서론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 이번 분석석에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#데이터-준비",
    "href": "posts/palmerpenguins/index copy.html#데이터-준비",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\nprint(missing_values)\n\n# 결측값 대체\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64"
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#종별-펭귄-개체수-분석",
    "href": "posts/palmerpenguins/index copy.html#종별-펭귄-개체수-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "species_counts = penguins[\"species\"].value_counts()\nplt.figure(figsize=(8,5))\nsns.barplot(x=species_counts.index, y=species_counts.values, palette=\"pastel\")\nplt.title(\"종별 펭귄 개체수 분포\")\nplt.xlabel(\"펭귄 종\")\nplt.ylabel(\"개체수\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\1627610802.py:3: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=species_counts.index, y=species_counts.values, palette=\"pastel\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44060 (\\N{HANGUL SYLLABLE GAE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 52404 (\\N{HANGUL SYLLABLE CE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 비율을 차지하며, Chinstrap 종이 가장 적다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#섬별-펭귄-개체-분포",
    "href": "posts/palmerpenguins/index copy.html#섬별-펭귄-개체-분포",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "island_counts = penguins[\"island\"].value_counts()\nsns.barplot(x=island_counts.index, y=island_counts.values, palette=\"coolwarm\")\nplt.title(\"섬별 펭귄 개체수 분포\")\nplt.xlabel(\"섬\")\nplt.ylabel(\"개체수\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\2278252319.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=island_counts.index, y=island_counts.values, palette=\"coolwarm\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44060 (\\N{HANGUL SYLLABLE GAE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 52404 (\\N{HANGUL SYLLABLE CE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49452 (\\N{HANGUL SYLLABLE SEOM}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 발견되었으며, Torgersen 섬에서는 가장 적었다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#부리-길이-비교-분석",
    "href": "posts/palmerpenguins/index copy.html#부리-길이-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "sns.boxplot(x=\"species\", y=\"bill_length_mm\", data=penguins, palette=\"Set2\")\nplt.title(\"종별 부리 길이 분포\")\nplt.xlabel(\"펭귄 종\")\nplt.ylabel(\"부리 길이(mm)\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\1038684966.py:1: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.boxplot(x=\"species\", y=\"bill_length_mm\", data=penguins, palette=\"Set2\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 47532 (\\N{HANGUL SYLLABLE RI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44600 (\\N{HANGUL SYLLABLE GIL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51060 (\\N{HANGUL SYLLABLE I}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 가장 긴 부리를 가지고 있으며, Adelie 종이 가장 짧은 부리를 가지고 있다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#몸무게-비교-분석",
    "href": "posts/palmerpenguins/index copy.html#몸무게-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "sns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins, palette=\"muted\")\nplt.title(\"종별 몸무게 분포\")\nplt.xlabel(\"펭귄 종\")\nplt.ylabel(\"몸무게(g)\")\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_7452\\4144331427.py:1: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.violinplot(x=\"species\", y=\"body_mass_g\", data=penguins, palette=\"muted\")\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 47800 (\\N{HANGUL SYLLABLE MOM}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 47924 (\\N{HANGUL SYLLABLE MU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44172 (\\N{HANGUL SYLLABLE GE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54189 (\\N{HANGUL SYLLABLE PENG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44484 (\\N{HANGUL SYLLABLE GWIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 가장 무거우며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#변수-간-상관-관계-분석",
    "href": "posts/palmerpenguins/index copy.html#변수-간-상관-관계-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "corr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\nplt.figure(figsize=(8,6))\nsns.heatmap(corr_matrix, annot=True, cmap=\"coolwarm\", linewidths=0.5)\nplt.title(\"변수 간 상관 관계\")\nplt.show()\n\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48320 (\\N{HANGUL SYLLABLE BYEON}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44036 (\\N{HANGUL SYLLABLE GAN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44288 (\\N{HANGUL SYLLABLE GWAN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\Users\\USER\\.conda\\envs\\ls_lyj\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44228 (\\N{HANGUL SYLLABLE GYE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와도 강한 양의 상관관계를 보인다."
  },
  {
    "objectID": "posts/palmerpenguins/index copy.html#결론",
    "href": "posts/palmerpenguins/index copy.html#결론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "본 분석을 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 특히: - Adelie 종이 가장 많고 Chinstrap 종이 가장 적음. - Gentoo 종이 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 존재하며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 사이의 강한 상관관계를 확인.\n추후 연구에서는 환경 요인과의 관계, 군집 분석 등을 추가적으로 고려할 필요가 있다."
  },
  {
    "objectID": "posts/test/index copy.html",
    "href": "posts/test/index copy.html",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 본 연구에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다.\n\n\n\n\n\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\nprint(missing_values)\n\n# 결측값 대체\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n\n\n\n\n\nspecies_counts = penguins[\"species\"].value_counts()\nprint(species_counts)\n\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\nName: count, dtype: int64\n\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 비율을 차지하며, Chinstrap 종이 가장 적다.\n\n\n\n\n\nisland_counts = penguins[\"island\"].value_counts()\nprint(island_counts)\n\nisland\nBiscoe       168\nDream        124\nTorgersen     52\nName: count, dtype: int64\n\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 발견되었으며, Torgersen 섬에서는 가장 적었다.\n\n\n\n\n\nbill_length_stats = penguins.groupby(\"species\")[\"bill_length_mm\"].agg([\"max\", \"min\", \"mean\"])\nprint(bill_length_stats)\n\n            max   min       mean\nspecies                         \nAdelie     46.0  32.1  38.825144\nChinstrap  58.0  40.9  48.833824\nGentoo     59.6  40.9  47.475983\n\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 가장 긴 부리를 가지고 있으며, Adelie 종이 가장 짧은 부리를 가지고 있다.\n\n\n\n\n\nbody_mass_stats = penguins.groupby(\"species\")[\"body_mass_g\"].agg([\"max\", \"min\", \"mean\"])\nprint(body_mass_stats)\n\n              max     min         mean\nspecies                               \nAdelie     4775.0  2850.0  3703.958910\nChinstrap  4800.0  2700.0  3733.088235\nGentoo     6300.0  3950.0  5068.965761\n\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 가장 무거우며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다.\n\n\n\n\n\ncorr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\nprint(corr_matrix)\n\n                   bill_length_mm  bill_depth_mm  flipper_length_mm  \\\nbill_length_mm           1.000000      -0.235053           0.656181   \nbill_depth_mm           -0.235053       1.000000          -0.583851   \nflipper_length_mm        0.656181      -0.583851           1.000000   \nbody_mass_g              0.595110      -0.471916           0.871202   \nyear                     0.054306      -0.060090           0.168934   \n\n                   body_mass_g      year  \nbill_length_mm        0.595110  0.054306  \nbill_depth_mm        -0.471916 -0.060090  \nflipper_length_mm     0.871202  0.168934  \nbody_mass_g           1.000000  0.042025  \nyear                  0.042025  1.000000  \n\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와도 강한 양의 상관관계를 보인다.\n\n\n\n\n\n본 분석을 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 특히: - Adelie 종이 가장 많고 Chinstrap 종이 가장 적음. - Gentoo 종이 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 존재하며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 사이의 강한 상관관계를 확인.\n추후 연구에서는 환경 요인과의 관계, 군집 분석 등을 추가적으로 고려할 필요가 있다."
  },
  {
    "objectID": "posts/test/index copy.html#서론",
    "href": "posts/test/index copy.html#서론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 본 연구에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다."
  },
  {
    "objectID": "posts/test/index copy.html#데이터-준비",
    "href": "posts/test/index copy.html#데이터-준비",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\nprint(missing_values)\n\n# 결측값 대체\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64"
  },
  {
    "objectID": "posts/test/index copy.html#종별-펭귄-개체수-분석",
    "href": "posts/test/index copy.html#종별-펭귄-개체수-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "species_counts = penguins[\"species\"].value_counts()\nprint(species_counts)\n\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\nName: count, dtype: int64\n\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 비율을 차지하며, Chinstrap 종이 가장 적다."
  },
  {
    "objectID": "posts/test/index copy.html#섬별-펭귄-개체-분포",
    "href": "posts/test/index copy.html#섬별-펭귄-개체-분포",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "island_counts = penguins[\"island\"].value_counts()\nprint(island_counts)\n\nisland\nBiscoe       168\nDream        124\nTorgersen     52\nName: count, dtype: int64\n\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 발견되었으며, Torgersen 섬에서는 가장 적었다."
  },
  {
    "objectID": "posts/test/index copy.html#부리-길이-비교-분석",
    "href": "posts/test/index copy.html#부리-길이-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "bill_length_stats = penguins.groupby(\"species\")[\"bill_length_mm\"].agg([\"max\", \"min\", \"mean\"])\nprint(bill_length_stats)\n\n            max   min       mean\nspecies                         \nAdelie     46.0  32.1  38.825144\nChinstrap  58.0  40.9  48.833824\nGentoo     59.6  40.9  47.475983\n\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 가장 긴 부리를 가지고 있으며, Adelie 종이 가장 짧은 부리를 가지고 있다."
  },
  {
    "objectID": "posts/test/index copy.html#몸무게-비교-분석",
    "href": "posts/test/index copy.html#몸무게-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "body_mass_stats = penguins.groupby(\"species\")[\"body_mass_g\"].agg([\"max\", \"min\", \"mean\"])\nprint(body_mass_stats)\n\n              max     min         mean\nspecies                               \nAdelie     4775.0  2850.0  3703.958910\nChinstrap  4800.0  2700.0  3733.088235\nGentoo     6300.0  3950.0  5068.965761\n\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 가장 무거우며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다."
  },
  {
    "objectID": "posts/test/index copy.html#변수-간-상관-관계-분석",
    "href": "posts/test/index copy.html#변수-간-상관-관계-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "corr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\nprint(corr_matrix)\n\n                   bill_length_mm  bill_depth_mm  flipper_length_mm  \\\nbill_length_mm           1.000000      -0.235053           0.656181   \nbill_depth_mm           -0.235053       1.000000          -0.583851   \nflipper_length_mm        0.656181      -0.583851           1.000000   \nbody_mass_g              0.595110      -0.471916           0.871202   \nyear                     0.054306      -0.060090           0.168934   \n\n                   body_mass_g      year  \nbill_length_mm        0.595110  0.054306  \nbill_depth_mm        -0.471916 -0.060090  \nflipper_length_mm     0.871202  0.168934  \nbody_mass_g           1.000000  0.042025  \nyear                  0.042025  1.000000  \n\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와도 강한 양의 상관관계를 보인다."
  },
  {
    "objectID": "posts/test/index copy.html#결론",
    "href": "posts/test/index copy.html#결론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "본 분석을 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 특히: - Adelie 종이 가장 많고 Chinstrap 종이 가장 적음. - Gentoo 종이 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 존재하며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 사이의 강한 상관관계를 확인.\n추후 연구에서는 환경 요인과의 관계, 군집 분석 등을 추가적으로 고려할 필요가 있다."
  },
  {
    "objectID": "posts/test/index.html",
    "href": "posts/test/index.html",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 본 연구에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다. 또한, 각 종의 특성을 보다 세밀하게 분석하여 연구 및 보존 정책에 활용할 수 있도록 한다.\n\n\n\n\n\nPalmerpenguins 데이터셋을 불러오고, 기본적인 전처리를 수행한다.\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n펭귄 데이터셋에는 일부 결측치(NaN)가 포함되어 있다. 이를 적절한 값으로 대체하여 분석의 정확성을 높인다.\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\n\n\n\n# 결측값 대체 (수치형 데이터는 평균값으로, 범주형 데이터는 'Unknown'으로 대체)\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\n\n\n\n\n각 종별 펭귄 개체수를 계산하여 비교한다.\n\nspecies_counts = penguins[\"species\"].value_counts()\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 개체수를 차지하고 있으며, Chinstrap 종은 가장 적은 개체수를 보인다.\n\n\n\n\n펭귄들이 서식하는 섬별 개체수를 확인한다.\n\nisland_counts = penguins[\"island\"].value_counts()\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 서식하며, Torgersen 섬에서는 가장 적은 개체수가 발견되었다.\n\n\n\n\n각 종별 부리 길이의 최대, 최소, 평균값을 비교하여 특성을 파악한다.\n\nbill_length_stats = penguins.groupby(\"species\")[\"bill_length_mm\"].agg([\"max\", \"min\", \"mean\"])\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 평균적으로 가장 긴 부리를 가지고 있으며, Adelie 종은 가장 짧은 부리를 가지고 있다.\n\n\n\n\n각 종별 몸무게의 최대, 최소, 평균값을 분석하여 종별 차이를 파악한다.\n\nbody_mass_stats = penguins.groupby(\"species\")[\"body_mass_g\"].agg([\"max\", \"min\", \"mean\"])\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 평균적으로 가장 무거운 몸무게를 가지며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다.\n\n\n\n\n펭귄의 다양한 생체 측정치 간의 상관관계를 분석하여 변수들 간의 연관성을 파악한다.\n\ncorr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와 강한 양의 상관관계를 보이며, 날개 길이가 길수록 몸무게가 증가하는 경향을 보인다.\n\n\n\n\n\n본 연구를 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 주요 결과는 다음과 같다: - Adelie 종이 가장 많은 개체수를 차지하며, Chinstrap 종이 가장 적은 개체수를 보인다. - Gentoo 종이 평균적으로 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 있으며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 간의 강한 양의 상관관계를 확인하였으며, 날개 길이 역시 몸무게와 높은 상관관계를 가짐.\n추후 연구에서는 환경 요인과 펭귄 개체군의 관계를 분석하거나, 보다 정밀한 군집 분석을 수행할 필요가 있다."
  },
  {
    "objectID": "posts/test/index.html#서론",
    "href": "posts/test/index.html#서론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 본 연구에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다. 또한, 각 종의 특성을 보다 세밀하게 분석하여 연구 및 보존 정책에 활용할 수 있도록 한다."
  },
  {
    "objectID": "posts/test/index.html#데이터-준비",
    "href": "posts/test/index.html#데이터-준비",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋을 불러오고, 기본적인 전처리를 수행한다.\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n펭귄 데이터셋에는 일부 결측치(NaN)가 포함되어 있다. 이를 적절한 값으로 대체하여 분석의 정확성을 높인다.\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\n\n\n\n# 결측값 대체 (수치형 데이터는 평균값으로, 범주형 데이터는 'Unknown'으로 대체)\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)"
  },
  {
    "objectID": "posts/test/index.html#종별-펭귄-개체수-분석",
    "href": "posts/test/index.html#종별-펭귄-개체수-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "각 종별 펭귄 개체수를 계산하여 비교한다.\n\nspecies_counts = penguins[\"species\"].value_counts()\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 개체수를 차지하고 있으며, Chinstrap 종은 가장 적은 개체수를 보인다."
  },
  {
    "objectID": "posts/test/index.html#섬별-펭귄-개체-분포",
    "href": "posts/test/index.html#섬별-펭귄-개체-분포",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "펭귄들이 서식하는 섬별 개체수를 확인한다.\n\nisland_counts = penguins[\"island\"].value_counts()\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 서식하며, Torgersen 섬에서는 가장 적은 개체수가 발견되었다."
  },
  {
    "objectID": "posts/test/index.html#부리-길이-비교-분석",
    "href": "posts/test/index.html#부리-길이-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "각 종별 부리 길이의 최대, 최소, 평균값을 비교하여 특성을 파악한다.\n\nbill_length_stats = penguins.groupby(\"species\")[\"bill_length_mm\"].agg([\"max\", \"min\", \"mean\"])\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 평균적으로 가장 긴 부리를 가지고 있으며, Adelie 종은 가장 짧은 부리를 가지고 있다."
  },
  {
    "objectID": "posts/test/index.html#몸무게-비교-분석",
    "href": "posts/test/index.html#몸무게-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "각 종별 몸무게의 최대, 최소, 평균값을 분석하여 종별 차이를 파악한다.\n\nbody_mass_stats = penguins.groupby(\"species\")[\"body_mass_g\"].agg([\"max\", \"min\", \"mean\"])\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 평균적으로 가장 무거운 몸무게를 가지며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다."
  },
  {
    "objectID": "posts/test/index.html#변수-간-상관-관계-분석",
    "href": "posts/test/index.html#변수-간-상관-관계-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "펭귄의 다양한 생체 측정치 간의 상관관계를 분석하여 변수들 간의 연관성을 파악한다.\n\ncorr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와 강한 양의 상관관계를 보이며, 날개 길이가 길수록 몸무게가 증가하는 경향을 보인다."
  },
  {
    "objectID": "posts/test/index.html#결론",
    "href": "posts/test/index.html#결론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "본 연구를 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 주요 결과는 다음과 같다: - Adelie 종이 가장 많은 개체수를 차지하며, Chinstrap 종이 가장 적은 개체수를 보인다. - Gentoo 종이 평균적으로 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 있으며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 간의 강한 양의 상관관계를 확인하였으며, 날개 길이 역시 몸무게와 높은 상관관계를 가짐.\n추후 연구에서는 환경 요인과 펭귄 개체군의 관계를 분석하거나, 보다 정밀한 군집 분석을 수행할 필요가 있다."
  },
  {
    "objectID": "posts/test/test.html",
    "href": "posts/test/test.html",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 본 연구에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다.\n\n\n\n\n\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\nprint(missing_values)\n\n# 결측값 대체\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n\n\n\n\n\nspecies_counts = penguins[\"species\"].value_counts()\nprint(species_counts)\n\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\nName: count, dtype: int64\n\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 비율을 차지하며, Chinstrap 종이 가장 적다.\n\n\n\n\n\nisland_counts = penguins[\"island\"].value_counts()\nprint(island_counts)\n\nisland\nBiscoe       168\nDream        124\nTorgersen     52\nName: count, dtype: int64\n\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 발견되었으며, Torgersen 섬에서는 가장 적었다.\n\n\n\n\n\nbill_length_stats = penguins.groupby(\"species\")[\"bill_length_mm\"].agg([\"max\", \"min\", \"mean\"])\nprint(bill_length_stats)\n\n            max   min       mean\nspecies                         \nAdelie     46.0  32.1  38.825144\nChinstrap  58.0  40.9  48.833824\nGentoo     59.6  40.9  47.475983\n\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 가장 긴 부리를 가지고 있으며, Adelie 종이 가장 짧은 부리를 가지고 있다.\n\n\n\n\n\nbody_mass_stats = penguins.groupby(\"species\")[\"body_mass_g\"].agg([\"max\", \"min\", \"mean\"])\nprint(body_mass_stats)\n\n              max     min         mean\nspecies                               \nAdelie     4775.0  2850.0  3703.958910\nChinstrap  4800.0  2700.0  3733.088235\nGentoo     6300.0  3950.0  5068.965761\n\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 가장 무거우며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다.\n\n\n\n\n\ncorr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\nprint(corr_matrix)\n\n                   bill_length_mm  bill_depth_mm  flipper_length_mm  \\\nbill_length_mm           1.000000      -0.235053           0.656181   \nbill_depth_mm           -0.235053       1.000000          -0.583851   \nflipper_length_mm        0.656181      -0.583851           1.000000   \nbody_mass_g              0.595110      -0.471916           0.871202   \nyear                     0.054306      -0.060090           0.168934   \n\n                   body_mass_g      year  \nbill_length_mm        0.595110  0.054306  \nbill_depth_mm        -0.471916 -0.060090  \nflipper_length_mm     0.871202  0.168934  \nbody_mass_g           1.000000  0.042025  \nyear                  0.042025  1.000000  \n\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와도 강한 양의 상관관계를 보인다.\n\n\n\n\n\n본 분석을 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 특히: - Adelie 종이 가장 많고 Chinstrap 종이 가장 적음. - Gentoo 종이 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 존재하며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 사이의 강한 상관관계를 확인.\n추후 연구에서는 환경 요인과의 관계, 군집 분석 등을 추가적으로 고려할 필요가 있다."
  },
  {
    "objectID": "posts/test/test.html#서론",
    "href": "posts/test/test.html#서론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "Palmerpenguins 데이터셋은 남극에 서식하는 세 종의 펭귄(Adelie, Chinstrap, Gentoo)에 대한 생태학적 정보를 제공한다. 본 연구에서는 이 데이터를 활용하여 종별 특성을 비교 분석하고, 다양한 변수 간의 관계를 탐색한다."
  },
  {
    "objectID": "posts/test/test.html#데이터-준비",
    "href": "posts/test/test.html#데이터-준비",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n\n# 결측치 확인\nmissing_values = penguins.isna().sum()\nprint(missing_values)\n\n# 결측값 대체\npenguins.fillna({\n    \"bill_length_mm\": penguins[\"bill_length_mm\"].mean(),\n    \"bill_depth_mm\": penguins[\"bill_depth_mm\"].mean(),\n    \"flipper_length_mm\": penguins[\"flipper_length_mm\"].mean(),\n    \"body_mass_g\": penguins[\"body_mass_g\"].mean(),\n    \"sex\": \"Unknown\"\n}, inplace=True)\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64"
  },
  {
    "objectID": "posts/test/test.html#종별-펭귄-개체수-분석",
    "href": "posts/test/test.html#종별-펭귄-개체수-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "species_counts = penguins[\"species\"].value_counts()\nprint(species_counts)\n\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\nName: count, dtype: int64\n\n\n\n\n\n\n\n종\n개체수\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\nAdelie 종이 가장 많은 비율을 차지하며, Chinstrap 종이 가장 적다."
  },
  {
    "objectID": "posts/test/test.html#섬별-펭귄-개체-분포",
    "href": "posts/test/test.html#섬별-펭귄-개체-분포",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "island_counts = penguins[\"island\"].value_counts()\nprint(island_counts)\n\nisland\nBiscoe       168\nDream        124\nTorgersen     52\nName: count, dtype: int64\n\n\n\n\n\n\n\n섬\n개체수\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\nBiscoe 섬에서 가장 많은 펭귄이 발견되었으며, Torgersen 섬에서는 가장 적었다."
  },
  {
    "objectID": "posts/test/test.html#부리-길이-비교-분석",
    "href": "posts/test/test.html#부리-길이-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "bill_length_stats = penguins.groupby(\"species\")[\"bill_length_mm\"].agg([\"max\", \"min\", \"mean\"])\nprint(bill_length_stats)\n\n            max   min       mean\nspecies                         \nAdelie     46.0  32.1  38.825144\nChinstrap  58.0  40.9  48.833824\nGentoo     59.6  40.9  47.475983\n\n\n\n\n\n\n\n종\n최대값(mm)\n최소값(mm)\n평균(mm)\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\nChinstrap 종이 가장 긴 부리를 가지고 있으며, Adelie 종이 가장 짧은 부리를 가지고 있다."
  },
  {
    "objectID": "posts/test/test.html#몸무게-비교-분석",
    "href": "posts/test/test.html#몸무게-비교-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "body_mass_stats = penguins.groupby(\"species\")[\"body_mass_g\"].agg([\"max\", \"min\", \"mean\"])\nprint(body_mass_stats)\n\n              max     min         mean\nspecies                               \nAdelie     4775.0  2850.0  3703.958910\nChinstrap  4800.0  2700.0  3733.088235\nGentoo     6300.0  3950.0  5068.965761\n\n\n\n\n\n\n\n종\n최대값(g)\n최소값(g)\n평균(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\nGentoo 종이 가장 무거우며, Chinstrap과 Adelie 종은 유사한 체중 범위를 보인다."
  },
  {
    "objectID": "posts/test/test.html#변수-간-상관-관계-분석",
    "href": "posts/test/test.html#변수-간-상관-관계-분석",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "corr_matrix = penguins.drop(columns=[\"species\", \"island\", \"sex\"]).corr()\nprint(corr_matrix)\n\n                   bill_length_mm  bill_depth_mm  flipper_length_mm  \\\nbill_length_mm           1.000000      -0.235053           0.656181   \nbill_depth_mm           -0.235053       1.000000          -0.583851   \nflipper_length_mm        0.656181      -0.583851           1.000000   \nbody_mass_g              0.595110      -0.471916           0.871202   \nyear                     0.054306      -0.060090           0.168934   \n\n                   body_mass_g      year  \nbill_length_mm        0.595110  0.054306  \nbill_depth_mm        -0.471916 -0.060090  \nflipper_length_mm     0.871202  0.168934  \nbody_mass_g           1.000000  0.042025  \nyear                  0.042025  1.000000  \n\n\n\n\n\n부리 길이와 몸무게는 높은 양의 상관관계를 보인다.\n부리 깊이는 상대적으로 낮은 상관관계를 가진다.\n날개 길이(flipper length)는 몸무게와도 강한 양의 상관관계를 보인다."
  },
  {
    "objectID": "posts/test/test.html#결론",
    "href": "posts/test/test.html#결론",
    "title": "Palmerpenguins 데이터 분석",
    "section": "",
    "text": "본 분석을 통해 Palmerpenguins 데이터셋의 주요 특징을 도출하였다. 특히: - Adelie 종이 가장 많고 Chinstrap 종이 가장 적음. - Gentoo 종이 가장 크고 무거우며, Chinstrap 종이 가장 긴 부리를 가짐. - 섬별 분포에서도 종별 차이가 존재하며, 특정 종이 특정 지역에 집중됨. - 부리 길이와 몸무게 사이의 강한 상관관계를 확인.\n추후 연구에서는 환경 요인과의 관계, 군집 분석 등을 추가적으로 고려할 필요가 있다."
  },
  {
    "objectID": "posts/palmerpenguins/index.html#서론",
    "href": "posts/palmerpenguins/index.html#서론",
    "title": "Palmerpenguins Data Analysis",
    "section": "서론",
    "text": "서론\nGitHub에서 제공하는 Palmerpenguins 데이터를 활용하여 남극에 서식하는 펭귄들의 특징을 분석했습니다. 각 종별 신체적 특징과 서식지 분포를 비교하며, 부리 길이, 몸무게 등의 차이를 확인했습니다."
  },
  {
    "objectID": "posts/palmerpenguins/index.html#분석-데이터",
    "href": "posts/palmerpenguins/index.html#분석-데이터",
    "title": "Palmerpenguins Data Analysis",
    "section": "분석 데이터",
    "text": "분석 데이터\n\n데이터 로드\n\n\n코드 보기\n\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n1. NaN 값 확인 및 제거\n\npenguins_isna = pd.DataFrame(penguins.isna().sum())\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\n\npenguins.isna().sum() # NaN 값 수정 확인\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64"
  },
  {
    "objectID": "posts/palmerpenguins/index.html#주요-분석-결과",
    "href": "posts/palmerpenguins/index.html#주요-분석-결과",
    "title": "Palmerpenguins Data Analysis",
    "section": "주요 분석 결과",
    "text": "주요 분석 결과\n\nAdelie: 모든 섬(Biscoe, Dream, Torgersen)에서 발견됨. 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움 \nChinstrap: Dream 섬에서만 서식함. 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간 \nGentoo: Biscoe 섬에서만 서식함. 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움"
  },
  {
    "objectID": "posts/palmerpenguins/index.html#데이터-분석-과정",
    "href": "posts/palmerpenguins/index.html#데이터-분석-과정",
    "title": "Palmerpenguins Data Analysis",
    "section": "데이터 분석 과정",
    "text": "데이터 분석 과정\n\n1. 데이터 로드\n\n\n코드 보기\n\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\n\n\n\n2. 데이터 전처리\n데이터셋에서 일부 NaN 값이 존재하는 것을 확인했습니다.\n\npenguins.isna().sum()\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n분석의 정확성을 높이기 위해 NaN 값을 수치형 변수는 0으로 범주형 변수는 X로 대체했습니다.\n\n\n코드 보기\n\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\npenguins.isna().sum()\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\npenguins.isna().sum()\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\n3. 데이터 분석\n\n1. 각 종별 펭귄수 구하기\n\n\n코드 보기\n\n\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n\n\n결과 값\n\n\n\nSpecies\nCount\n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\n\n요약\n펭귄 개체 수는 Adelie(152) &gt; Gentoo(124) &gt; Chinstrap(68) 순으로 분포하고 있음을 확인할 수 있습니다.\n\n\n\n2. 서식지별 펭귄 분포 및 특징 분석\n2-1 서식지별 펭귄 개체 수 비교\n\n\n코드 보기\n\n\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n\n\n결과 값\n\n\n\nIsland\ncount\n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\n2-2. 서식지별 종별 개체 수 분석\n\n\n코드 보기\n\n\nisland_species_counts = {}\n\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n    \n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n\nisland_species_counts\n\n{'Torgersen': {'Adelie': 52, 'Gentoo': 0, 'Chinstrap': 0},\n 'Biscoe': {'Adelie': 44, 'Gentoo': 124, 'Chinstrap': 0},\n 'Dream': {'Adelie': 56, 'Gentoo': 0, 'Chinstrap': 68}}\n\n\n\n결과 값\n\n\n\nIsland\nAdelie\nChinstrap\nGentoo\n\n\n\n\nBiscoe\n44\n0\n124\n\n\nDream\n56\n68\n0\n\n\nTorgersen\n52\n0\n0\n\n\n\n\n요약\nAdelie는 남극의 다양한 환경에서도 살아갈 수 있는 종이며,\nChinstrap과 Gentoo는 특정 섬에서만 발견되어 서식지가 제한적인 경향을 보였습니다.\nBiscoe 섬이 가장 많은 펭귄이 서식하는 주요 서식지라는 점도 확인되었습니다.\n\n\n\n3. 펭귄 부리 특징 분석\n3-1. 펭귄 부리 특성\n\n\n코드 보기\n\n\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] &gt; 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n\n\n결과 값\n\n\n\nMetric\nValue(mm)\n\n\n\n\nMax Bill Length\n59.6\n\n\nMin Bill Length\n32.1\n\n\nMean Bill Length\n43.6\n\n\n\n3-2. 종별 부리 특성\n\n\n코드 보기\n\n\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] &gt; 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n\nspecies_bill_length\n\n{'Adelie': {'max': 46.0, 'min': 32.1, 'mean': np.float64(38.536184210526315)},\n 'Gentoo': {'max': 59.6, 'min': 40.9, 'mean': np.float64(47.12177419354838)},\n 'Chinstrap': {'max': 58.0,\n  'min': 40.9,\n  'mean': np.float64(48.83382352941177)}}\n\n\n\n결과 값\n\n\n\nSpecies\nMax Bill Length\nMin Bill Length\nMean Bill Length\n\n\n\n\nAdelie\n46.0\n32.1\n38.54\n\n\nGentoo\n59.6\n40.9\n47.12\n\n\nChinstrap\n58.0\n40.9\n48.83\n\n\n\n\n요약\n분석 결과, 펭귄의 부리 길이는 최소 32.1mm에서 최대 59.6mm까지 분포하며, 평균값은 43.6mm로 확인되었습니다. 종별 비교를 통해 Chinstrap &gt; Gentoo &gt; Adelie 순으로 부리가 긴 것을 확인했습니다.\nChinstrap 종이 평균값 기준 가장 긴 부리를 가진 종이며, Gentoo 종은 최대 부리 길이를 가진 개체가 존재하며, 평균값도 높은 편입니다. Adelie 종은 전체적으로 부리가 짧은 편이며, 최소값을 기록한 종입니다.\n\n\n\n4. 펭귄 몸무게 특징\n4-1 펭귄 몸무게 특징징\n\n\n코드 보기\n\n\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] &gt; 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n\n\n결과 값\n\n\n\nMetric\nValue(g)\n\n\n\n\nMax Body Mass\n6300.0\n\n\nMin Body Mass\n2700.0\n\n\nMean Body Mass\n4177.33\n\n\n\n4-2. 종별 몸무게 특징\n\n\n코드 보기\n\n\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] &gt; 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n\n\n결과 값\n\n\n\nSpecies\nMax Body Mass(g)\nMin Body Mass(g)\nMean Body Mass(g)\n\n\n\n\nAdelie\n4775.0\n2850.0\n3676.32\n\n\nGentoo\n6300.0\n3950.0\n5035.08\n\n\nChinstrap\n4800.0\n2700.0\n3733.09\n\n\n\n##### 요약\n펭귄의 몸무게는 최소 2700g에서 최대 6300g까지 분포하며, 평균적으로 4177.33인 것을 알 수 있습니다.\n종별로 비교했을 때, Gentoo &gt; Chinstrap &gt; Adelie 순으로 몸무게가 무거운 것을 확인 할 수 있었습니다.\n결론적으로, Gentoo 종은 평균적으로 가장 무거운 펭귄이며, 최대 몸무게를 기록한 개체도 포함하고 있습니다. Adelie 종은 가장 가벼운 종으로, 체중 범위도 가장 낮은 쪽에 분포합니다. Chinstrap 종은 Adelie보다 약간 무겁지만, Gentoo에 비하면 몸무게가 가벼운 편입니다.\n\n\n\n4. 결론\n이번 분석을 통해 남극에 서식하는 펭귄들의 개체 수, 부리 길이, 몸무게 차이 및 서식지 분포를 비교하였습니다.\n\n개체 수 및 서식지 분포\n\n펭귄 개체 수는 Adelie(152) &gt; Gentoo(124) &gt; Chinstrap(68) 순으로 많음을 확인하였습니다.\nAdelie 종은 가장 많은 개체 수를 보이며, Biscoe, Dream, Torgersen 섬 등 다양한 환경에서 서식하는 특징을 보였습니다. Gentoo 종은 Biscoe 섬에서만 발견되었으며, 특정 서식지에서만 서식하는 경향을 보였습니다. Chinstrap 종은 Dream 섬에서만 서식하며, 서식 환경이 제한적인 특성을 나타내었습니다. Biscoe 섬이 전체적으로 가장 많은 펭귄이 서식하는 주요 서식지라는 점도 확인되었습니다.\n\n부리 길이 비교\n\n펭귄의 부리 길이는 최소 32.1mm ~ 최대 59.6mm 범위로 분포하며, 평균값은 43.6mm로 확인되었습니다. 종별로 비교했을 때 Chinstrap &gt; Gentoo &gt; Adelie 순으로 부리가 긴 경향을 보였습니다.\nChinstrap 종이 평균적으로 가장 긴 부리를 가지며, 평균 48.8mm로 확인되었습니다. Gentoo 종은 개체별 차이가 크며, 최대 59.6mm로 가장 긴 개체가 존재하였습니다. Adelie 종은 전체적으로 부리가 짧은 편이며, 최소값(32.1mm)을 기록한 종이었습니다. 이러한 차이는 종별 먹이 섭취 방식과 환경 적응력과 관련될 가능성이 있으며, 추가적인 연구가 필요해 보입니다.\n\n몸무게 비교\n\n펭귄의 몸무게는 최소 2700g ~ 최대 6300g 사이에서 분포하며, 평균값은 4177.33g으로 확인되었습니다. 종별 비교 결과, Gentoo &gt; Chinstrap &gt; Adelie 순으로 무거운 경향을 보였습니다.\nGentoo 종은 평균 5035.08g으로 가장 무거운 종이며, 최대 6300g의 개체가 포함되어 있습니다. Chinstrap 종은 평균 3733.09g으로, Adelie보다 약간 무거운 특성을 보였습니다. Adelie 종은 평균 3676.32g으로 가장 가벼운 종이며, 최소 2850g의 개체도 포함되어 있었습니다.\n\n종합 결론\n분석 결과, Adelie는 다양한 환경에서 서식하는 종이며, Gentoo와 Chinstrap은 특정 섬에서만 발견되는 경향을 보이는 종임을 확인하였습니다. 부리 길이와 몸무게에서도 종별로 유의미한 차이가 있으며, 이는 먹이 섭취 방식, 환경 적응력, 서식지 특성과 밀접한 관련이 있을 가능성이 높습니다. 추후 연구에서는 기후 변화, 서식지 조건, 개체군 이동 패턴 등과의 관계를 추가적으로 분석할 필요가 있습니다.\n\n참고\n각 종별 개체 수(Adelie 152마리, Gentoo 124마리, Chinstrap 68마리)가 다르지만, 이번 분석에서는 개체 수 차이에 따른 가중치를 적용하지 않고 단순 평균값을 기준으로 비교하였습니다. 이는 종별 평균적인 특징 차이를 직관적으로 파악하기 위한 목적이며, 개체 수에 따른 세부적인 영향은 추가적인 분석을 통해 고려할 수 있을 것입니다."
  }
]