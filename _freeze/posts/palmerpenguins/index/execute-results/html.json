{
  "hash": "6c4c14dc84be9826998b1b8e27cb4cf8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Palmerpenguins Data Analysis\"\nauthor: \"조익현, 정의주, 윤현재, 이유진\"\ndate: \"2025-03-07\"\ncategories: [news, code, analysis]\nimage: \"palmerpenguins.png\"\n---\n\n\n\n\n\n# 총정리\n- Adelie: 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움\n- Chinstrap: 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간\n- Gentoo: 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움\n\n\n# 분석 데이터\n##### 데이터 로드\n\n::: {#f097ff07 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n```\n:::\n\n\n##### 1. NaN 값 확인 및 제거\n\n::: {#8778b96f .cell execution_count=2}\n``` {.python .cell-code}\npenguins.isna().sum() # NaN 값이 어디에 있는지 확인\n```\n\n::: {.cell-output .cell-output-display execution_count=68}\n```\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n```\n:::\n:::\n\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\n::: {#432106fb .cell execution_count=3}\n``` {.python .cell-code}\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n```\n:::\n\n\n::: {#b7aff06e .cell execution_count=4}\n``` {.python .cell-code}\npenguins.isna().sum() # NaN 값 수정 확인\n```\n\n::: {.cell-output .cell-output-display execution_count=70}\n```\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n```\n:::\n:::\n\n\n# 1. 각 종별 펭귄수 구하기\n\n::: {#3ef9c2f6 .cell execution_count=5}\n``` {.python .cell-code}\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n```\n:::\n\n\n###### 결과 값\n| Species   | Count |\n|-----------|-------|\n| Adelie    | 152   |\n| Gentoo    | 124   |\n| Chinstrap | 68    |\n\n### 해당 결과를 통해 Adelie(152), Gentoo(124), Chinstrap(68) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n# 2-1. 각 섬별 펭귄수 구하기\n\n::: {#c7039201 .cell execution_count=6}\n``` {.python .cell-code}\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n```\n:::\n\n\n###### 결과 값\n| Island    | count |\n|-----------|-------|\n| Biscoe    | 168   |\n| Dream     | 124   |\n| Torgersen | 52    |\n\n### 해당 결과를 통해 Biscoe(168), Dream(124), Torgersen(52) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n# 2-2. 각 섬별 펭귄 종류 구하기\n\n::: {#8f5d2166 .cell execution_count=7}\n``` {.python .cell-code}\nisland_species_counts = {}\n\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n    \n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n```\n:::\n\n\n| Island    | Adelie | Chinstrap | Gentoo |\n|-----------|--------|-----------|--------|\n| Biscoe    | 40     | 0         | 20     |\n| Dream     | 30     | 10        | 15     |\n| Torgersen | 25     | 5         | 0      |\n\n### Adelie는 모든 지역(Torgersen(52), Biscoe(44), Dream(52))에 서식하고 있어 서식지가 분포되어 있는 것을 알 수 있습니다.\n\n### Gentoo와 Chinstrap은 각 Biscoe와 Dream에만 서식하는 것을 알 수 있습니다.\n\n# 3-1. 부리 길이 구하기\n\n::: {#92ae90b3 .cell execution_count=8}\n``` {.python .cell-code}\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] > 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n```\n:::\n\n\n##### 결과 값\n\n| Metric           | Value(mm) |\n|------------------|-----------|\n| Max Bill Length  | 59.6      |\n| Min Bill Length  | 32.1      |\n| Mean Bill Length | 43.6      |\n\n### 해당 결과를 통해 전체 펭귄 부리의 최대값(59.6), 최소값(32.1), 평균값(43.6)을 알 수 있습니다.\n\n# 3-2. 펭귄별 부리 길이 구하기\n\n::: {#669c09e2 .cell execution_count=9}\n``` {.python .cell-code}\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] > 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n```\n:::\n\n\n###### 결과 값\n| Species   | Max Bill Length | Min Bill Length | Mean Bill Length |\n|-----------|----------------|-----------------|------------------|\n| Adelie    | 46.0           | 32.1            | 38.54           |\n| Gentoo    | 59.6           | 40.9            | 47.12           |\n| Chinstrap | 58.0           | 40.9            | 48.83           |\n\n\n### 각 종의 부리 길이 평균값을 기준으로 부리가 가장 긴 종을 다음과 같이 구했습니다.\n### Chinstrap(48.8) \\> Gentoo(47.1) \\> Adelie(38.5)\n\n# 4-1. 몸무게 구하기\n\n::: {#965aec28 .cell execution_count=10}\n``` {.python .cell-code}\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] > 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n```\n:::\n\n\n##### 결과 값\n\n| Metric         | Value(g) |\n|----------------|----------|\n| Max Body Mass  | 6300.0   |\n| Min Body Mass  | 2700.0   |\n| Mean Body Mass | 4177.33  |\n\n\n### 해당 결과를 통해 전체 펭귄 몸무게게 최대값(6300), 최소값(2700), 평균값(4177)을 알 수 있습니다.\n\n# 4-2. 펭귄별 몸무게 구하기\n\n::: {#4bc3158f .cell execution_count=11}\n``` {.python .cell-code}\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] > 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n```\n:::\n\n\n##### 결과 값\n| Species   | Max Body Mass(g) | Min Body Mass(g) | Mean Body Mass(g) |\n|-----------|---------------|---------------|----------------|\n| Adelie    | 4775.0        | 2850.0        | 3676.32        |\n| Gentoo    | 6300.0        | 3950.0        | 5035.08        |\n| Chinstrap | 4800.0        | 2700.0        | 3733.09        |\n\n\n### 각 종의 몸무게 평균값을 기준으로 무게가 가장 무거운 종을 다음과 같이 구했습니다.\n\n### Gentoo(5035) \\> Chinstrap(3733.09) \\> Adelie(3676.32)\n\n\n##### 이번 분석은 가중치 없이 단순히 각 항목의 평균값을 비교하여 판단했습니다.\n\n##### 추후 전체 값과 종별 특성을 비교하는 값을 작성할 예정입니다.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}